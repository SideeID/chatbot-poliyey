feat:
Fungsi: Menandakan penambahan fitur baru pada proyek.
Contoh: feat: Tambahkan fitur pencarian berdasarkan judul artikel
Penjelasan: Setiap kali fitur baru ditambahkan, kita akan awali commit message dengan feat:. Ini membantu dalam melacak perkembangan fitur-fitur baru dalam proyek.

fix:
Fungsi: Menandai perbaikan bug atau kesalahan pada kode.
Contoh: fix: Perbaiki bug pada tampilan ketika data tidak ditemukan
Penjelasan: Commit dengan tipe fix digunakan untuk melacak semua perbaikan bug yang telah dilakukan.

chore:
Fungsi: Menandai perubahan yang tidak langsung berhubungan dengan fitur atau perbaikan bug, seperti:
Update konfigurasi build tools
Perbarui dependensi
Bersihkan kode yang tidak terpakai
Contoh: chore: Update versi Node.js ke 18
Penjelasan: Perubahan-perubahan yang bersifat "housekeeping" ini penting untuk dicatat, namun tidak perlu dianggap sebagai fitur atau perbaikan bug.

refactor:
Fungsi: Menandai perubahan kode yang tidak mengubah fungsionalitas, tetapi meningkatkan struktur atau kualitas kode.
Contoh: refactor: Perbaiki struktur kode pada modul autentikasi
Penjelasan: Refactoring penting untuk menjaga kode tetap bersih dan mudah dipelihara.


Untuk berpindah ke branch yang sudah ada:
git switch nama-branch-lama

Untuk membuat branch baru dan berpindah ke branch tersebut:
git switch -c nama-branch-baru

Jika Anda memiliki perubahan yang belum di-commit dan ingin berpindah branch, simpan perubahan tersebut menggunakan git stash.
git stash

Ambil dan hapus stash:
git stash pop

Atau, hanya mengambil stash tanpa menghapusnya dari daftar stash:
git stash apply

Lihat daftar stash yang ada (jika perlu):
git stash list

Hapus stash tertentu (jika perlu):
git stash drop stash@{0}

Hapus semua stash (jika perlu):
git stash clear
